version: "3.9"

services:
  minidbgo:
    platform: linux/arm64
    build:
      context: .
      dockerfile: Dockerfile
    container_name: minidbgo
    ports:
      - "6866:6866"
    volumes:
      - ./data:/data
    environment:
      - MODE=server
      - GOMEMLIMIT=128MiB    # Crucial: Go runtime memory limit 
      - MAX_MEM_MB=25        # Smaller memtable 
      - FLUSH_SIZE=5000      # Flush more frequently 
      - GOGC=30              # More aggressive garbage collection
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 256M     # Hard limit for the container
        reservations:
          cpus: "0.5"
          memory: 128M     # Reserve this amount
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6866/api/health"]
      interval: 30s     
      timeout: 10s     
      retries: 3       
      start_period: 15s 

  minidbgo-client:
    platform: linux/arm64
    build:
      context: ./client/MiniDBGoClient
      dockerfile: Dockerfile
      args:
        - PUBLIC_BASE_URL_ARG=http://localhost:6866/api
    container_name: minidbgo-client
    ports:
      - "3000:80"
    depends_on:
      minidbgo:
        condition: service_healthy
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 256M 
        reservations:
          cpus: "0.2"
          memory: 128M

